controller: 
  name: haproxy-controller

  ingressClass: haproxy-external #haproxy-external for internal
  ingressClassResource: 
    name: haproxy-external 
  config: 
  #  ssl-redirect: "true"
   ssl-redirect-port: "443"
  #  stats-auth: "admin:strongpassword" #Securing the HAProxy Stats Port
  service: 
    type: LoadBalancer 
    ports: 
      - name: http 
        port: 80 
        protocol: TCP 
        targetPort: 80
      - name: https 
        port: 443 
        protocol: TCP 
        targetPort: 443 
      - name: stat 
        port: 1024 
        protocol: TCP 
        targetPort: 1024

    annotations: 
      service.beta.kubernetes.io/aws-load-balancer-type: "external" #"nlb"  # or "external"-external is classic
      service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
      service.beta.kubernetes.io/aws-load-balancer-internal: "false"
      service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
      service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:ap-south-2:058264470882:certificate/47a1d684-7a5d-49bd-b80f-8089c205d94c
      service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"
      service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
      external-dns.alpha.kubernetes.io/hostname: haproxy.manupanand.online # we can write multiple dns here
      service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "3600"
      service.beta.kubernetes.io/aws-load-balancer-listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
  # extraArgs: 
  #   ssl-redirect: "true"
  #   ssl-redirect-code: "301"

      
defaultBackend: 
  enabled: true 

rbac: 
 create: true

